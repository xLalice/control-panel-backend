"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const inquiry_controller_1 = require("./inquiry.controller");
const isAuthenticated_1 = require("../../middlewares/isAuthenticated");
const rbac_1 = require("../../middlewares/rbac");
const router = express_1.default.Router();
const inquiryController = new inquiry_controller_1.InquiryController();
router.post("/check-customer", (req, res) => inquiryController.checkCustomerExists(req, res));
router.get("/", isAuthenticated_1.isAuthenticated, (0, rbac_1.createRoleMiddleware)("READ_INQUIRIES"), (req, res) => inquiryController.getInquiries(req, res));
router.get("/stats/overview", isAuthenticated_1.isAuthenticated, (0, rbac_1.createRoleMiddleware)("READ_INQUIRIES"), (req, res) => inquiryController.getInquiryStatistics(req, res));
router.get("/:id", isAuthenticated_1.isAuthenticated, (0, rbac_1.createRoleMiddleware)("READ_INQUIRIES"), (req, res) => inquiryController.getInquiryById(req, res));
router.post("/", isAuthenticated_1.isAuthenticated, (0, rbac_1.createRoleMiddleware)("WRITE_INQUIRIES"), (req, res) => inquiryController.createInquiry(req, res));
router.put("/:id", isAuthenticated_1.isAuthenticated, (0, rbac_1.createRoleMiddleware)("UPDATE_INQUIRIES"), (req, res) => inquiryController.updateInquiry(req, res));
router.post("/:id/quote", isAuthenticated_1.isAuthenticated, (0, rbac_1.createRoleMiddleware)("UPDATE_INQUIRIES"), (req, res) => inquiryController.createQuote(req, res));
router.post("/:id/approve", isAuthenticated_1.isAuthenticated, (0, rbac_1.createRoleMiddleware)("UPDATE_INQUIRIES"), (req, res) => inquiryController.approveInquiry(req, res));
router.post("/:id/schedule", isAuthenticated_1.isAuthenticated, (0, rbac_1.createRoleMiddleware)("UPDATE_INQUIRIES"), (req, res) => inquiryController.scheduleInquiry(req, res));
router.post("/:id/fulfill", isAuthenticated_1.isAuthenticated, (0, rbac_1.createRoleMiddleware)("UPDATE_INQUIRIES"), (req, res) => inquiryController.fulfillInquiry(req, res));
router.delete("/:id", isAuthenticated_1.isAuthenticated, (0, rbac_1.createRoleMiddleware)("DELETE_INQUIRIES"), (req, res) => inquiryController.deleteInquiry(req, res));
router.post("/:id/convert-to-lead", isAuthenticated_1.isAuthenticated, (0, rbac_1.createRoleMiddleware)("UPDATE_INQUIRIES"), (req, res) => inquiryController.convertToLead(req, res));
exports.default = router;
