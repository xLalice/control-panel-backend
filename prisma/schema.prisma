generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MARKETING
  SALES
  LOGISTICS
  ACCOUNTING
}

model FacebookCreds {
  id    Int   @id     @default(autoincrement())
  user_access_token String  @unique
  page_access_token String
  page_id     String  
  expiry_date   DateTime

}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  role      Role
  name      String
  leads     Lead[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Lead {
  id          Int          @id @default(autoincrement())
  sheetName   String
  data        Json
  status      LeadStatus    @default(New)
  leadOwnerId String?        @unique
  leadOwner   User?          @relation(fields: [leadOwnerId], references: [id]) 
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Post {
  id               String    @id @default(uuid())
  fbPostId         String    @unique
  postType         String    
  content          String?
  mediaUrl         String?
  createdAt        DateTime  // Post creation time on Facebook
  updatedAt        DateTime  @updatedAt
  
  // Current metrics
  likes            Int       @default(0)
  comments         Int       @default(0)
  shares           Int       @default(0)
  reach            Int       @default(0)
  impressions      Int       @default(0)
  
  // Historical metrics (time-series data)
  metrics          PostMetric[]
}

model PostMetric {
  id               String    @id @default(uuid())
  post             Post      @relation(fields: [postId], references: [id])
  postId           String
  likes            Int
  comments         Int
  shares           Int
  reach            Int
  impressions      Int
  fetchedAt        DateTime  @default(now())
}

model PageMetric {
  id               String    @id @default(uuid())
  followerCount    Int
  pageViews        Int
  pageImpressions  Int
  pageReach        Int
  engagement       Int       // Total engagements (likes + comments + shares)
  date             DateTime  // Date of the metrics (YYYY-MM-DD format)
  fetchedAt        DateTime  @default(now())

  @@unique([date]) // Ensure no duplicate metrics for the same date
}


model SystemSettings {
  id          String   @id @default(cuid())
  key         String   @unique
  value       String
  description String?
  updatedBy   String
  updatedAt   DateTime @updatedAt
}

model Session {
  id        String   @id
  sid       String   @unique
  data      String
  expiresAt DateTime
}

enum LeadStatus {
  New
  InProgress
  Converted
  Closed
}


